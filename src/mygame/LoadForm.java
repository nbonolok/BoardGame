/*
 * LoadForm.java
 *
 * Created on January 28, 2010, 12:40 PM
 */

package mygame;
import javax.swing.JFrame;
import java.io.File;
import java.io.FilenameFilter;
import javax.swing.ImageIcon;

/**
 * This class is used for loading game state of the saved games.It only loads
 * one game at time, which is mhl type.
 * @author  BKNyoni
 */
public class LoadForm extends JFrame { //javax.swing.JFrame {
    
    /**
     * The current selected langauge
     */
    public String lang;
    /**
     * A game that must be loaded. this must be a saved game.
     */
    public String  currentFileName;
    board boardGame;
    BoardFrame fr;
    loadGame lg;
    /**
     *Class constructor that sets the DEFAULT state of the loading environment.
     * It recieves an object of board class.
     * @param boardGame This is an object of class board
     */
    public LoadForm(board boardGame,BoardFrame frame) {
       
        this.fr =frame;
        this.boardGame = boardGame;   
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
        ImageIcon icon = new ImageIcon(this.getClass().getResource("res/images/Cow2.png"));
        cowIcon.setIcon(icon);
        updatelangLoad();
    }
    /**
     *This method updates all the swing components to a selected langauge
     * <br/>Buttons -load game & cancel
     * <br/>Label - select Game.
     */
    public void updatelangLoad()
    {
        if(boardGame.getlanguage() == null ? "EN" == null : boardGame.getlanguage().equals("EN"))
        {
        jLabel1.setText("Select Mhele Game");
        jButton1.setText("Load Game");
        jButton2.setText("Cancel");
        }
        else if(boardGame.getlanguage() == null ? "TN" == null : boardGame.getlanguage().equals("TN"))
        {
        jLabel1.setText("Thopha Motshameko");
        jButton1.setText("Tlhatlhela");
        jButton2.setText("Tswala");
        }
    }
    /**
     *Gets a list of saved files in the memcard storage location.
     * @return savedGame this is a filename
     */
    public String [] getSavedGameFiles()
    {
        
        File memcard = new File("memcard");
        String [] savedGame;
        FilenameFilter filter = new FilenameFilter()
         {
            @Override
         public boolean accept(File memcard, String name) {
         return !name.startsWith(".") && name.endsWith(".mhl");
         }};
          savedGame = memcard.list(filter);

           for(int i=0; i< savedGame.length; ++i)
             {
    	       System.out.println(savedGame[i]);
    	    }
     return savedGame; 
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cowIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mhele ");
        setCursor(boardGame.getGameCursor()
        );
        setFocusTraversalPolicyProvider(true);
        setLocationByPlatform(true);
        setName("Load Game"); // NOI18N
        setResizable(false);

        jList1.setBackground(new java.awt.Color(255, 255, 204));
        jList1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 1, true));
        jList1.setFont(new java.awt.Font("Comic Sans MS", 3, 14));
        jList1.setForeground(new java.awt.Color(153, 51, 0));
        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings =getSavedGameFiles();
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setSelectionBackground(new java.awt.Color(204, 153, 0));
        jList1.setSelectionForeground(new java.awt.Color(51, 255, 0));
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setFont(new java.awt.Font("Comic Sans MS", 3, 12));
        jButton1.setForeground(new java.awt.Color(255, 204, 51));
        jButton1.setText("Load Game");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Comic Sans MS", 3, 12));
        jButton2.setForeground(new java.awt.Color(255, 204, 51));
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 18));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mygame/res/images/games.png"))); // NOI18N
        jLabel1.setText("Select Mhele Game! ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cowIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(24, 24, 24)
                        .addComponent(jButton2)
                        .addGap(39, 39, 39)
                        .addComponent(cowIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     *This method restores the game state of the loaded manager
     * Cap layout,sound ,theme and player activities
     */
    public void loadManager()
         {
             //restore cap layout
                            boardGame.CAP_LAYOUT = lg.restoreCaps;
                            boardGame.mheleAI.setCapLayout(lg.restoreCaps);
                         //restore theme
                         boardGame.updateThemes(boardGame.availableThemes[lg.LD_themePointer]); 
                         boardGame.repaint();
                         
                         //restore sound
                         if(lg.sound ==1) 
                           {  boardGame.music.ConfigSound(true); }
                         else if(lg.sound ==0) 
                         { boardGame.music.ConfigSound(false); }
                         
                         //restore caps for players
                          boardGame.PLAYER1_CAPS_DOCK=lg.LD_PLAYER1_CAPS_DOCK;
                          boardGame.PLAYER1_CAPS_BOARD=lg.LD_PLAYER1_CAPS_BOARD;
                          
                          boardGame.mheleAI.setCAPS_CAPTURED_BY_PLAYER1(lg.LD_CAPS_CAPTURED_BY_PLAYER1);
                          
                          boardGame.PLAYER2_CAPS_DOCK=lg.LD_PLAYER2_CAPS_DOCK;
                          boardGame.PLAYER2_CAPS_BOARD=lg.LD_PLAYER2_CAPS_BOARD;
                          boardGame.mheleAI.setCAPS_CAPTURED_BY_PLAYER2(lg.LD_CAPS_CAPTURED_BY_PLAYER2);

                          //restore language
                          if(lg.LD_lang.contains("TN")) lang="TN"; 
                          else if(lg.LD_lang.contains("EN")) lang="EN";   
                            boardGame.setlanguage(lang); 
     	 	 	    boardGame.upDateGameBoard();
     	 	 	   //langSetupMenu();
     	 	 	    //updateGameMenuTree();    
                           
         }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        System.out.println(currentFileName);
         lg = new loadGame(boardGame);
         
                         lg.getGameWorld(currentFileName);
                         if(lg.validGamefile)
                         {
                         this.loadManager();
                         this.setVisible(false);
                         if(boardGame.isVisible()==false)
                           {
                            fr.changeWorkSpaceByLoad();
                           
     	 	          }
                         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
// TODO add your handling code here:
        currentFileName= (String)jList1.getSelectedValue();
        if(currentFileName != null)
        {
         jButton1.setEnabled(true);
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LoadForm(boardGame,fr).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cowIcon;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
}
